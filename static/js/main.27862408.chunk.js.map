{"version":3,"sources":["App.jsx","index.jsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","App","useAuthState","user","ChatRoom","SignIn","type","onClick","provider","GoogleAuthProvider","signInWithPopup","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","currentUser","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behaviour","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","props","messageClass","className","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAeAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAGT,IAAMC,EAAOR,IAASQ,OAChBC,EAAYT,IAASS,YAEZ,SAASC,IACtB,MAAeC,YAAaH,GAArBI,EAAP,oBACA,OACE,gCACE,2BACA,kCACGA,EAAO,cAACC,EAAD,IAAe,cAACC,EAAD,SAM/B,SAASA,IAKP,OACE,wBAAQC,KAAK,SAASC,QALC,WACvB,IAAMC,EAAW,IAAIjB,IAASQ,KAAKU,mBACnCV,EAAKW,gBAAgBF,IAGrB,qBAUJ,SAASJ,IACP,IAAMO,EAAQC,mBACRC,EAAcb,EAAUc,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAErD,EAAmBC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EAAP,oBAEA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQ5B,EAAK6B,YAAvBC,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZjB,EAAYkB,IAAI,CACpBC,KAAMV,EACNW,UAAW1C,IAASS,UAAUkC,WAAWC,kBACzCN,MACAC,aATgB,OAYlBP,EAAa,IAEbZ,EAAMyB,QAAQC,eAAe,CAAEC,UAAW,WAdxB,2CAAH,sDAiBjB,OACE,gCACE,2CACA,iCACGlB,GAAYA,EAASmB,KAAI,SAACC,GAAD,OAAS,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OACzD,qBAAKC,IAAKjC,OAGZ,uBAAMkC,SAAUrB,EAAhB,UACE,uBACEsB,MAAOxB,EACPyB,SAAU,SAACtB,GACTF,EAAaE,EAAEuB,OAAOF,UAG1B,wBAAQxC,KAAK,SAAb,wBAMR,SAASmC,EAAYQ,GACnB,MAAgCA,EAAMP,QAA9BV,EAAR,EAAQA,KAAMH,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,SAEboB,EAAerB,IAAQ9B,EAAK6B,YAAYC,IAAM,OAAS,WAE7D,OACE,sBAAKsB,UAAS,kBAAaD,GAA3B,UACE,qBAAKE,IAAKtB,EAAUuB,IAAI,KACxB,4BAAIrB,OCzGVsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.27862408.chunk.js","sourcesContent":["/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\n\nimport React, { useState, useRef } from 'react';\n\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyCGHHLuH32rump6HK2b3fZzF9AI6RDgXx0',\n  authDomain: 'fir-auth-af1a2.firebaseapp.com',\n  projectId: 'fir-auth-af1a2',\n  storageBucket: 'fir-auth-af1a2.appspot.com',\n  messagingSenderId: '727122910339',\n  appId: '1:727122910339:web:f183ef8945ce79ec30cfb6',\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nexport default function App() {\n  const [user] = useAuthState(auth);\n  return (\n    <div>\n      <header />\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n  return (\n    <button type=\"button\" onClick={signInWithGoogle}>Sign In</button>\n  );\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button type=\"button\" onClick={() => auth.signOut()}>Sign Out</button>\n  );\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n    });\n\n    setFormValue('');\n\n    dummy.current.scrollIntoView({ behaviour: 'smooth' });\n  };\n\n  return (\n    <div>\n      <h1>Chat Room</h1>\n      <main>\n        {messages && messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\n        <div ref={dummy} />\n      </main>\n\n      <form onSubmit={sendMessage}>\n        <input\n          value={formValue}\n          onChange={(e) => {\n            setFormValue(e.target.value);\n          }}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'send' : 'recieved';\n\n  return (\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} alt=\"\" />\n      <p>{text}</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}